<#@ template language="C#" #>
<#@ assembly name="System.Core.dll" #>
<#@ import namespace="System.Linq" #>
<#@ parameter type="System.String" name="entityName" #>
<#@ parameter type="System.String" name="entityNamespace" #>
<#@ parameter type="System.String" name="mappingName" #>
<#@ parameter type="System.String" name="mappingNamespace" #>
<#@ parameter type="System.String" name="server" #>
<#@ parameter type="System.String" name="database" #>
<#@ parameter type="System.String" name="table" #>
<#@ parameter type="System.String[]" name="columnNames" #>
<#@ parameter type="System.String[]" name="columnSqlTypes" #>
<#@ parameter type="System.Type[]" name="columnClrTypes" #>
<#@ parameter type="System.String[]" name="columnDefaults" #>
<#@ parameter type="System.Int32[]" name="columnLengths" #>
<#@ parameter type="System.Boolean[]" name="columnIsNullable" #>
<#@ parameter type="System.Boolean[]" name="columnIsIdentity" #>
<#@ parameter type="System.Boolean[]" name="columnIsAutoGenerated" #>
<#@ parameter type="System.Boolean[]" name="columnIsPrimaryKey" #>
using System;

namespace <#= entityNamespace #>
{
    public class <#= entityName #>
    {
<# for (int index = 0; index < columnNames.Length; index++) { #>
        public <#= ToBuiltInTypeString(columnClrTypes[index]) #> <#= columnNames[index] #> { get; set; }
<# } #>    }
}

<#+
    public static string ToBuiltInTypeString(Type type)
    {
        if (type == typeof(System.Boolean)) return "bool";
        if (type == typeof(System.Byte)) return "byte";
        if (type == typeof(System.SByte)) return "sbyte";
        if (type == typeof(System.Char)) return "char";
        if (type == typeof(System.Decimal)) return "decimal";
        if (type == typeof(System.Double)) return "double";
        if (type == typeof(System.Single)) return "float";
        if (type == typeof(System.Int32)) return "int";
        if (type == typeof(System.UInt32)) return "uint";
        if (type == typeof(System.Int64)) return "long";
        if (type == typeof(System.UInt64)) return "ulong";
        if (type == typeof(System.Object)) return "object";
        if (type == typeof(System.Int16)) return "short";
        if (type == typeof(System.UInt16)) return "ushort";
        if (type == typeof(System.String)) return "string";
        return type.ToString().Replace("System.", string.Empty);
    }
#>